type YWebRtcTopic @model @auth(rules: [{allow: private}, {allow: private, provider: iam}]) {
  name: String! @primaryKey
  receivers: [String!]!
}

type Player @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  gameID: ID! @index(name: "byGame")
  characters: [Character] @hasMany(indexName: "byPlayer", fields: ["id"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Game @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  name: String
  slug: String
  players: [Player] @hasMany(indexName: "byGame", fields: ["id"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

# Character

type Aspect {
  type: String!
  phrase: String!
}

type Skill {
  name: String!
  rating: String!
}

type Stunt {
  name: String!
  description: String!
}

type Stress {
  total: Int!
  current: Int!
}

type StressMap {
  physical: Stress!
  mental: Stress!
}

type FatePoints {
  refresh: Int!
  current: Int!
}

type Character @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  name: String!
  aspects: [Aspect]!
  skills: [Skill]!
  stunts: [Stunt]!
  stress: StressMap!
  fate: FatePoints!
  background: String
  notes: String
  playerID: ID @index(name: "byPlayer")
  player: Player @belongsTo(fields: ["playerID"])
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

# end Character

input TemplateData {
  gameID: ID!
  username: String!
  title: String!
  heading: String!
  content: String!
  assetsBucket: String!
  gameName: String!
}

input EmailInput {
  gameID: ID!
  Template: String!
  TemplateData: TemplateData!
  emailAddress: String
}

# input InviteUsersInput {
#   gameID: ID!
#   invites: [String!]!
# }

# input Record {
#   messageId: ID
#   body: String!
# }

type Mutation @aws_iam @aws_cognito_user_pools {
  enqueueEmail(input: EmailInput!): AWSJSON!
  # inviteUsers(input: InviteUsersInput!): AWSJSON! @function(name: "inviteUsers-${env}")
  # sendEmail(Records: [Record!]!): AWSJSON! @function(name: "sendEmail-${env}")
  # emailNotification(input: AWSJSON!): AWSJSON! @function(name: "emailNotification-${env}")
}
